{
    "general": [
        {
            "name": "backup.amazon_dynamodb",
            "description": "Amazon DynamoDB backup",
            "command": "aws dynamodb create-backup --table-name @@table_name --backup-name dynamodb_backup_$(date +%F_%T) > /var/backup/dynamodb_backup.json"
        },
        {
            "name": "backup.cassandra",
            "description": "Cassandra database backup",
            "command": "nodetool snapshot -t backup @@keyspace_name -d /var/backup/cassandra_backup"
        },
        {
            "name": "backup.couchbase",
            "description": "Couchbase database backup",
            "command": "cbbackup couchbase://@@host /var/backup/couchbase_backup -u @@username -p @@password"
        },
        {
            "name": "backup.elasticsearch",
            "description": "Elasticsearch backup",
            "command": "curl -X PUT 'localhost:9200/_snapshot/my_backup/snapshot_1' -H 'Content-Type: application/json' -d'{\"indices\":\" @@index_name \",\"ignore_unavailable\":true,\"include_global_state\":false}'"
        },
        {
            "name": "backup.firebase_realtime_database",
            "description": "Firebase Realtime Database backup",
            "command": "curl -X GET 'https://@@project_id.firebaseio.com/.json?access_token=@@access_token' > /var/backup/firebase_backup.json"
        },
        {
            "name": "backup.hbase",
            "description": "HBase database backup",
            "command": "hbase org.apache.hadoop.hbase.snapshot.ExportSnapshot -snapshot @@snapshot_name -copy-to /var/backup/hbase_backup"
        },
        {
            "name": "backup.ibm_db2",
            "description": "IBM Db2 database backup",
            "command": "db2 backup database @@database_name to /var/backup/db2_backup"
        },
        {
            "name": "backup.influxdb",
            "description": "InfluxDB database backup",
            "command": "influxd backup -database @@database_name /var/backup/influxdb_backup"
        },
        {
            "name": "backup.mariadb",
            "description": "MariaDB database backup",
            "command": "mysqldump -u @@username -p@@password @@database_name > /var/backup/mariadb_backup.sql"
        },
        {
            "name": "backup.memcached",
            "description": "Memcached database backup",
            "command": "memcached-tool @@host:@@port dump > /var/backup/memcached_backup"
        },
        {
            "name": "backup.microsoft_sql_server",
            "description": "Microsoft SQL Server database backup",
            "command": "sqlcmd -S @@server_name -U @@username -P @@password -Q \"BACKUP DATABASE [ @@database_name ] TO DISK = '/var/backup/sql_server_backup.bak'\""
        },
        {
            "name": "backup.mongodb",
            "description": "MongoDB database backup",
            "command": "mongodump --host @@host --port @@port --username @@username --password @@password --db @@database_name --out /var/backup/mongodb_backup"
        },
        {
            "name": "backup.mysql",
            "description": "MySQL database backup",
            "command": "mysqldump -u @@username -p@@password @@database_name > /var/backup/mysql_backup.sql"
        },
        {
            "name": "backup.neo4j",
            "description": "Neo4j database backup",
            "command": "neo4j-admin dump --database @@database_name --to /var/backup/neo4j_backup.dump"
        },
        {
            "name": "backup.oracle_database",
            "description": "Oracle Database backup",
            "command": "exp @@username/@@password@@@database_name file=/var/backup/oracle_backup.dmp full=y"
        },
        {
            "name": "backup.postgresql",
            "description": "PostgreSQL database backup",
            "command": "pg_dump -U @@username -W @@database_name > /var/backup/postgresql_backup.sql"
        },
        {
            "name": "backup.redis",
            "description": "Redis database backup",
            "command": "redis-cli --rdb /var/backup/redis_backup.rdb"
        },
        {
            "name": "backup.snowflake",
            "description": "Snowflake database backup",
            "command": "snowsql -a @@account -u @@username -p @@password -d @@database_name -q 'COPY INTO @~/backup/snowflake_backup.csv FROM @@database_name;'"
        },
        {
            "name": "backup.sqlite",
            "description": "SQLite database backup",
            "command": "sqlite3 @@database_name .dump > /var/backup/sqlite_backup.sql"
        },
        {
            "name": "backup.teradata",
            "description": "Teradata database backup",
            "command": "tpt -c -f /var/backup/teradata_backup.txt -j 4 -u @@username -pw @@password -db @@database_name"
        },
        {
            "name": "blue.enable",
            "description": "Enables Bluetooth functionality by bringing up the hci0 interface, unblocking Bluetooth, and printing 'done'.",
            "command": "sudo hciconfig hci0 up > /dev/null 2>&1 && sudo hciconfig hci0 > /dev/null 2>&1 && sudo rfkill unblock bluetooth > /dev/null 2>&1 && echo done"
        },
        {
            "name": "blue.list",
            "description": "Lists Bluetooth devices and their status.",
            "command": "rfkill list"
        },
        {
            "name": "capture.all",
            "description": "Capture all packets on a specified network interface.",
            "command": "tcpdump -i @@interface -w capture.pcap"
        },
        {
            "name": "capture.all.from_ip",
            "description": "Capture all packets from/to a specified IP address on a specified network interface.",
            "command": "tcpdump -i @@interface host @@ip -w capture.pcap"
        },
        {
            "name": "capture.one",
            "description": "Capture only one packet on a specified network interface.",
            "command": "tcpdump -i @@interface -c 1 -w capture.pcap"
        },
        {
            "name": "capture.one.from_ip",
            "description": "Capture only one packet from/to a specified IP address on a specified network interface.",
            "command": "tcpdump -i @@interface host @@ip -c 1 -w capture.pcap"
        },
        {
            "name": "crack.keepass",
            "description": "Crack KeePass database encryption using Hashcat",
            "command": "hashcat -m 13400 -a 0 @@file @@wordlist"
        },
        {
            "name": "crack.luks1",
            "description": "Crack LUKS1 disk image encryption using Hashcat",
            "command": "hashcat -m 14600 -a 0 @@file @@wordlist"
        },
        {
            "name": "crack.luks2",
            "description": "Crack LUKS2 disk image encryption using Hashcat",
            "command": "hashcat -m 29600 -a 0 @@file @@wordlist"
        },
        {
            "name": "crack.pcap",
            "description": "Crack WPA/WPA2 encryption in PCAP files using Hashcat",
            "command": "hcxpcapngtool -o hash.hc22000 @@file && hashcat -m 22000 -a 0 hash.hc22000 @@wordlist"
        },
        {
            "name": "crack.zip",
            "description": "Crack ZIP file encryption using Hashcat",
            "command": "hashcat -m 13600 -a 0 @@file @@wordlist"
        },
        {
            "name": "disk.dump",
            "description": "Create a disk dump from a specified input device to an output file.",
            "command": "dd if=@@device of=@@file bs=4M"
        },
        {
            "name": "disk.recover",
            "description": "Carve files from a specified disk image using foremost.",
            "command": "foremost -i @@image -o @@folder"
        },
        {
            "name": "dos.longpw",
            "description": "Send and X number of get requests without data",
            "command": "dos.longpw @@domain @@times @@size"
        },
        {
            "name": "dos.spam",
            "description": "Send and X number of get requests without data",
            "command": "dos.spam @@domain @@times"
        },
        {
            "name": "fhide.embed",
            "description": "Hides a file within a cover image or audio file using Steghide.",
            "command": "steghide embed -cf @@file -ef @@secret"
        },
        {
            "name": "fhide.extract",
            "description": "Extracts hidden data from a cover image or audio file using Steghide.",
            "command": "steghide extract -sf @@file"
        },
        {
            "name": "fhide.info",
            "description": "Displays information about a cover file, including any hidden data, using Steghide.",
            "command": "steghide info @@file"
        },
        {
            "name": "file",
            "description": "Utility used to determine the type of a file.",
            "command": "file @@file"
        },
        {
            "name": "file.bin",
            "description": "Switch to bits (binary digits) dump, rather than hex dump.",
            "command": "xxd -b @@file"
        },
        {
            "name": "file.by",
            "description": "lsof alias",
            "command": "lsof @@file"
        },
        {
            "name": "file.str",
            "description": "Strings alias",
            "command": "strings @@file"
        },
        {
            "name": "file.clean.meta",
            "description": "Removes all metadata from an image to protect privacy",
            "command": "exiftool -all= @@image"
        },
        {
            "name": "file.dec",
            "description": "Takes a hexadecimal dump and converts it back into binary format.",
            "command": "xxd -d @@file"
        },
        {
            "name": "file.dump",
            "description": "Output in PostScript continuous hex dump style. Also known as plain hex dump style.",
            "command": "xxd -ps @@file"
        },
        {
            "name": "file.hex",
            "description": "creates  a hex dump of a given file or standard input.",
            "command": "xxd @@file"
        },
        {
            "name": "file.list",
            "description": "Create a C header file from a binary file. This header file contains a C array definition representing the binary data in hexadecimal format.",
            "command": "xxd -i @@file"
        },
        {
            "name": "file.meta",
            "description": "Extracts and displays all metadata from an image file using exiftool.",
            "command": "exiftool @@file"
        },
        {
            "name": "firewall.drop.bigger",
            "description": "Drop all outcome port bigger than expecified port",
            "command": "iptables -A OUTPUT -p tcp --dport @@port: -j DROP && iptables -A OUTPUT -p udp --dport @@port: -j DROP && ip6tables -A OUTPUT -p tcp --dport @@port: -j DROP &&    ip6tables -A OUTPUT -p udp --dport @@port: -j DROP"
        },
        {
            "name": "firewall.drop.in.all",
            "description": "Drop all incomme connections",
            "command": "iptables -A INPUT -p tcp -j DROP && iptables -A INPUT -p udp -j DROP && ip6tables -A INPUT -p tcp -j DROP && ip6tables -A INPUT -p udp -j DROP"
        },
        {
            "name": "firewall.drop.out.all",
            "description": "Derop all outcome connections",
            "command": "iptables -A OUTPUT -p tcp -j DROP && iptables -A OUTPUT -p udp -j DROP && ip6tables -A OUTPUT -p tcp -j DROP && ip6tables -A OUTPUT -p udp -j DROP"
        },
        {
            "name": "firewall.flush",
            "description": "Remove all firewall rules non-resible",
            "command": "ip6tables -F && iptables -F"
        },
        {
            "name": "ftp.connect",
            "description": "Connects to an FTP server at the specified address.",
            "command": "ftp @@address"
        },
        {
            "name": "qrcode",
            "description": "Create a QR code from the provided data.",
            "command": "qrcode @@data"
        },
        {
            "name": "map.auth",
            "description": "Deal with authentication credentials (or bypassing them) on the target system",
            "command": "nmap -T3 -D RND:8 --script auth @@target"
        },
        {
            "name": "map.default",
            "description": "Default set of nmap NSE scripts, same as nmap [options] -sC [ip or dns]",
            "command": "nmap -T3 -D RND:8 --script default @@target"
        },
        {
            "name": "map.discovery",
            "description": "Try to actively discover more about the network by querying public registries, SNMP-enabled devices, directory services, and the like.",
            "command": "nmap -T3 -D RND:88 --script discovery @@target"
        },
        {
            "name": "map.dns",
            "description": "Return common DNS information and reverse DNS",
            "command": "map.dns @@domain"
        },
        {
            "name": "map.dns.dirs",
            "description": "scans a domain for directories with a specified wordlist, and saves the results to an output file.",
            "command": "dirb @@domain -w @@wordlist -o @@output"
        },
        {
            "name": "map.dns.subdomain",
            "description": "It scans a domain for subdomains using the specified wordlist and saves the results to an output file.",
            "command": "dnsenum --enum @@domain -t 15 --threads 4 -f @@wordlist -o @@output"
        },
        {
            "name": "map.local",
            "description": "Scan local open connections",
            "command": "ss -tupran"
        },
        {
            "name": "map.myip",
            "description": "Show the current ip address",
            "command": "curl ip.me"
        },
        {
            "name": "map.safe",
            "description": "Perform general network discovery, are less likely to offend remote administrators",
            "command": "nmap -T3 -D RND:8 --script safe @@target"
        },
        {
            "name": "map.vuln",
            "description": "Check for specific known vulnerabilities and generally only report results if they are found.",
            "command": "nmap -T3 -D RND:8 --script vuln @@target"
        },
        {
            "name": "nuke.file",
            "description": "Securely overwrites and deletes a file seven times, then removes it from the filesystem to prevent data recovery.",
            "command": "shred -u -z -n 7 @@file"
        },
        {
            "name": "nuke.hd",
            "description": "Securely overwrites and deletes the contents of a device seven times",
            "command": "shred -vzn 7 @@device"
        },
        {
            "name": "nuke.logs",
            "description": "Securely overwrites and deletes the /var/logs",
            "command": "sudo find /var/log -type f -exec shred -u {} \\;"
        },
        {
            "name": "scp.copy",
            "description": "Creates a directory named 'out' and copies files from a specified folder to a remote host via SCP.",
            "command": "mkdir out && scp -P @@port @@folder/* hostuser@@@ip:./out/"
        },
        {
            "name": "self.setup",
            "description": "Setup and install witch_craft",
            "command": "sudo apt install -y nmap whois dirb dnsenum libc-bin iproute2 xxd iptables coreutils wget curl dnsutils traceroute openssl openssh-server xattr libimage-exiftool-perl tor foremost pkg-config libssl-dev steghide libwebkit2gtk-4.1-dev build-essential curl wget file libxdo-dev 7zip libayatana-appindicator3-dev librsvg2-dev chromium"
        },
        {
            "name": "server.eviltwin",
            "description": "Start a http server that display an local webpage and collect all request data in plain text",
            "command": "server.eviltwin @@address @@path"
        },
        {
            "name": "smbclient.access",
            "description": "Accesses a specific share on the specified address.",
            "command": "smbclient \\\\@@address\\@@share"
        },
        {
            "name": "smbclient.list",
            "description": "Lists available shares on the specified address.",
            "command": "smbclient -L @@address"
        },
        {
            "name": "span.text",
            "description": "Sends a POST request with JSON data containing a 'main' field and a message field specified by @@message to a specified domain.",
            "command": "curl -X POST -H \"Content-Type: application/json\" -d '{\"main\": \"somename\", \"@@message\": \"somemsg\"}' @@domain"
        },
        {
            "name": "maidz",
            "description": "An cute cat girl tells you basic system information like neofetch",
            "command": "maidz"
        },
        {
            "name": "search.ans",
            "description": "Search ans for ipv4 and ipv6",
            "command": "search.ans --ip ip_address"
        },
        {
            "name": "search.geoloc",
            "description": "Geolocation search for coordinates",
            "command": "search.geoloc --ip ip_address"
        },
        {
            "name": "search.proxy",
            "description": "Search proxy for IP routing",
            "command": "search.proxy --ip ip_address"
        },
        {
            "name": "search.ipscore",
            "description": "IP scoring for security (CIN score)",
            "command": "search.ipscore --ip ip_address"
        },
        {
            "name": "search.meta",
            "description": "Social media profile search in over 1000 platforms",
            "command": "search.social --keyword nickname"
        },
        {
            "name": "view.applogs",
            "description": "Applogs typically refer to logs generated by specific applications or software. They contain information about the operation, performance, and errors of the application.",
            "command": "find /var/log -type f -name \"*.log\" -exec tail -n 1000 {} \\;"
        },
        {
            "name": "view.auditlog",
            "description": "auditlog: Audit messages, tracking system events for security auditing.",
            "command": "tail -n 1000 /var/log/audit/audit.log"
        },
        {
            "name": "view.authlog",
            "description": "authlog: Authentication-related messages.",
            "command": "tail -n 1000 /var/log/auth.log"
        },
        {
            "name": "view.btmp",
            "description": "btmp: Records failed login attempts.",
            "command": "lastb -n 1000"
        },
        {
            "name": "view.kernlog",
            "description": "kernlog: Kernel-related messages.",
            "command": "tail -n 1000 /var/log/kern.log"
        },
        {
            "name": "view.lastlog",
            "description": "lastlog: Records last login information for all users.",
            "command": "tail -n 1000 /var/log/lastlog"
        },
        {
            "name": "view.messages",
            "description": "messages: System messages, including kernel and service messages.",
            "command": "tail -n 1000 /var/log/messages"
        },
        {
            "name": "view.secure",
            "description": "secure: Security-related messages, including authentication and authorization events.",
            "command": "tail -n 1000 /var/log/secure"
        },
        {
            "name": "view.syslog",
            "description": "syslog: General system messages.",
            "command": "tail -n 1000 /var/log/syslog"
        },
        {
            "name": "view.wtmp",
            "description": "wtmp: Records all user logins and logouts.",
            "command": "last -n 1000"
        },
        {
            "name": "web.download",
            "description": "Full website downloader",
            "command": "wget --recursive -U 'Mozilla/5.0 (X11; Linux x86_64; rv:130.0) Gecko/20100101 Firefox/130.0' --page-requisites --html-extension --convert-links --restrict-file-names=windows --random-wait --wait=@@wait --limit-rate=200k --tries=inf --domains example.com --no-parent @@url"
        }
    ]
}
